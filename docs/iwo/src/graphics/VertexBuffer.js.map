{"version":3,"file":"VertexBuffer.js","sources":["../../../../iwo/src/graphics/VertexBuffer.ts"],"sourcesContent":["import { WebGL } from \"./WebglHelper\";\r\nimport { AttributeType, Geometry } from \"geometry/Geometry\";\r\nimport { ReferenceCounter } from \"helpers/ReferenceCounter\";\r\nimport { AttributeBuffer } from \"./AttributeBuffer\";\r\n\r\nexport class VertexBuffer {\r\n    public attribute_flags: number;\r\n    public attributes: Map<AttributeType, ArrayBufferView>;\r\n    public attribute_buffers: Map<AttributeType, AttributeBuffer>;\r\n    public VBO: WebGLBuffer | undefined;\r\n    public readonly interleaved: boolean;\r\n    public readonly references: ReferenceCounter;\r\n    public readonly stride: number;\r\n\r\n    public constructor(gl: WebGL2RenderingContext, geometry: Geometry) {\r\n        this.attributes = geometry.attributes;\r\n        this.attribute_buffers = new Map<AttributeType, AttributeBuffer>();\r\n        this.attribute_flags = geometry.attribute_flags;\r\n        this.interleaved = geometry.isInterleaved;\r\n        this.references = new ReferenceCounter();\r\n        this.stride = 0;\r\n\r\n        if (this.interleaved && geometry.interleaved_attributes) {\r\n            this.VBO = WebGL.buildBuffer(gl, gl.ARRAY_BUFFER, geometry.interleaved_attributes);\r\n            if (this.attribute_flags & AttributeType.Vertex) this.stride += 12;\r\n            if (this.attribute_flags & AttributeType.Tex_Coords) this.stride += 8;\r\n            if (this.attribute_flags & AttributeType.Normals) this.stride += 12;\r\n            if (this.attribute_flags & AttributeType.Tangents) this.stride += 12;\r\n            if (this.attribute_flags & AttributeType.Bitangents) this.stride += 12;\r\n        } else this.initSeparateBuffers(gl);\r\n    }\r\n\r\n    public bindBuffers(gl: WebGL2RenderingContext): void {\r\n        if (this.interleaved) {\r\n            let offset = 0;\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.VBO!);\r\n            if (this.attribute_flags & AttributeType.Vertex) {\r\n                gl.enableVertexAttribArray(0);\r\n                gl.vertexAttribPointer(0, 3, gl.FLOAT, false, this.stride, offset);\r\n                offset += 12;\r\n            } else gl.disableVertexAttribArray(0);\r\n\r\n            if (this.attribute_flags & AttributeType.Tex_Coords) {\r\n                gl.enableVertexAttribArray(1);\r\n                gl.vertexAttribPointer(1, 2, gl.FLOAT, false, this.stride, offset);\r\n                offset += 8;\r\n            } else gl.disableVertexAttribArray(1);\r\n\r\n            if (this.attribute_flags & AttributeType.Normals) {\r\n                gl.enableVertexAttribArray(2);\r\n                gl.vertexAttribPointer(2, 3, gl.FLOAT, true, this.stride, offset);\r\n                offset += 12;\r\n            } else gl.disableVertexAttribArray(2);\r\n\r\n            if (this.attribute_flags & AttributeType.Tangents) {\r\n                gl.enableVertexAttribArray(3);\r\n                gl.vertexAttribPointer(3, 3, gl.FLOAT, true, this.stride, offset);\r\n                offset += 12;\r\n            } else gl.disableVertexAttribArray(3);\r\n\r\n            if (this.attribute_flags & AttributeType.Bitangents) {\r\n                gl.enableVertexAttribArray(4);\r\n                gl.vertexAttribPointer(4, 3, gl.FLOAT, true, this.stride, offset);\r\n                offset += 12;\r\n            } else gl.disableVertexAttribArray(4);\r\n        } else {\r\n            this.bindBuffer(gl, 0, AttributeType.Vertex);\r\n            this.bindBuffer(gl, 1, AttributeType.Tex_Coords);\r\n            this.bindBuffer(gl, 2, AttributeType.Normals);\r\n            this.bindBuffer(gl, 3, AttributeType.Tangents);\r\n            this.bindBuffer(gl, 4, AttributeType.Bitangents);\r\n        }\r\n    }\r\n\r\n    private bindBuffer(gl: WebGL2RenderingContext, attribute_index: number, attribute_type: AttributeType): void {\r\n        if (this.attribute_flags & attribute_type) {\r\n            const attribute_buffer = this.attribute_buffers.get(attribute_type)!;\r\n            gl.enableVertexAttribArray(attribute_index);\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, attribute_buffer.buffer);\r\n            gl.vertexAttribPointer(\r\n                attribute_index,\r\n                attribute_buffer.component_size,\r\n                attribute_buffer.type,\r\n                attribute_buffer.normalized,\r\n                0,\r\n                0\r\n            );\r\n        } else gl.disableVertexAttribArray(attribute_index);\r\n    }\r\n\r\n    public destroy(gl: WebGL2RenderingContext): void {\r\n        if (this.references.count !== 0) {\r\n            console.warn(this);\r\n            console.warn(\"Can't destroy while still being referenced\");\r\n        } else {\r\n            if (this.VBO) gl.deleteBuffer(this.VBO);\r\n            for (const buffer of this.attribute_buffers.values()) {\r\n                gl.deleteBuffer(buffer);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initSeparateBuffers(gl: WebGL2RenderingContext): void {\r\n        let data;\r\n        if (this.attribute_flags & AttributeType.Vertex && (data = this.attributes.get(AttributeType.Vertex)) != null)\r\n            this.attribute_buffers.set(\r\n                AttributeType.Vertex,\r\n                new AttributeBuffer(WebGL.buildBuffer(gl, gl.ARRAY_BUFFER, data), 3, gl.FLOAT, false)\r\n            );\r\n        if ((data = this.attributes.get(AttributeType.Tex_Coords)) != null)\r\n            this.attribute_buffers.set(\r\n                AttributeType.Tex_Coords,\r\n                new AttributeBuffer(WebGL.buildBuffer(gl, gl.ARRAY_BUFFER, data), 2, gl.FLOAT, false)\r\n            );\r\n        if ((data = this.attributes.get(AttributeType.Normals)) != null)\r\n            this.attribute_buffers.set(\r\n                AttributeType.Normals,\r\n                new AttributeBuffer(WebGL.buildBuffer(gl, gl.ARRAY_BUFFER, data), 3, gl.FLOAT, true)\r\n            );\r\n        if ((data = this.attributes.get(AttributeType.Tangents)) != null)\r\n            this.attribute_buffers.set(\r\n                AttributeType.Tangents,\r\n                new AttributeBuffer(WebGL.buildBuffer(gl, gl.ARRAY_BUFFER, data), 3, gl.FLOAT, true)\r\n            );\r\n        if ((data = this.attributes.get(AttributeType.Bitangents)) != null)\r\n            this.attribute_buffers.set(\r\n                AttributeType.Bitangents,\r\n                new AttributeBuffer(WebGL.buildBuffer(gl, gl.ARRAY_BUFFER, data), 3, gl.FLOAT, true)\r\n            );\r\n    }\r\n}\r\n"],"names":["ReferenceCounter","AttributeBuffer"],"mappings":"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"}