{"version":3,"file":"Renderer.js","sources":["../../../../iwo/src/graphics/Renderer.ts"],"sourcesContent":["import { IndexBuffer } from \"./IndexBuffer\";\r\nimport { VertexBuffer } from \"./VertexBuffer\";\r\nimport { Shader } from \"./shader/Shader\";\r\nimport { mat3, mat4 } from \"gl-matrix\";\r\nimport { Texture2D } from \"./Texture2D\";\r\nimport { UniformBuffer } from \"./UniformBuffer\";\r\nimport { Material } from \"materials/Material\";\r\nimport { RendererStats } from \"./RendererStats\";\r\nimport { TextureCubeMap } from \"./TextureCubeMap\";\r\nimport { ShaderSource, ShaderSources } from \"./shader/ShaderSources\";\r\n\r\nconst temp: mat4 = mat4.create();\r\n\r\nconst modelview_matrix: mat4 = mat4.create();\r\nlet normalview_matrix: mat3 | null = mat3.create();\r\nconst mvp_matrix: mat4 = mat4.create();\r\n\r\nexport class ViewportDimensions {\r\n    public x: number = 0;\r\n    public y: number = 0;\r\n    public width: number = 0;\r\n    public height: number = 0;\r\n}\r\n\r\nexport class Renderer {\r\n    public readonly gl: WebGL2RenderingContext;\r\n    private current_vertex_buffer: VertexBuffer | undefined;\r\n    private current_index_buffer: IndexBuffer | undefined;\r\n    private current_material: Material | undefined;\r\n    private current_shader: Shader | undefined;\r\n\r\n    private static _EMPTY_TEXTURE: WebGLTexture;\r\n    private static _EMPTY_CUBE_TEXTURE: WebGLTexture;\r\n    private static _BRDF_LUT_TEXTURE: WebGLTexture | undefined;\r\n    private static _Shaders: Map<string, Shader>;\r\n\r\n    private readonly PerFrameBinding = 0;\r\n    private readonly PerModelBinding = 1;\r\n    private uboPerFrameBlock: UniformBuffer;\r\n    private uboPerModelBlock: UniformBuffer;\r\n\r\n    private stats: RendererStats;\r\n\r\n    public viewport: ViewportDimensions = new ViewportDimensions();\r\n\r\n    public constructor(gl: WebGL2RenderingContext) {\r\n        this.gl = gl;\r\n        this.stats = new RendererStats();\r\n\r\n        Renderer._EMPTY_TEXTURE = new Texture2D(gl).texture_id;\r\n        Renderer._EMPTY_CUBE_TEXTURE = new TextureCubeMap(gl).texture_id;\r\n\r\n        Renderer._Shaders = new Map<string, Shader>();\r\n\r\n        for (const shader_source of ShaderSources) {\r\n            if (shader_source.subclass !== undefined) {\r\n                Renderer._Shaders.set(\r\n                    shader_source.name,\r\n                    new shader_source.subclass(gl, shader_source.vert, shader_source.frag)\r\n                );\r\n            } else {\r\n                Renderer._Shaders.set(shader_source.name, new Shader(gl, shader_source.vert, shader_source.frag));\r\n            }\r\n        }\r\n\r\n        const shader = Renderer.GetShader(ShaderSource.PBR.name)!;\r\n        //Requires shader that has these uniform buffers present\r\n        this.uboPerFrameBlock = new UniformBuffer(shader, \"ubo_per_frame\");\r\n        this.uboPerModelBlock = new UniformBuffer(shader, \"ubo_per_model\");\r\n        for (const shader of Renderer._Shaders.values()) {\r\n            this.uboPerFrameBlock.bindShader(shader, this.PerFrameBinding);\r\n            this.uboPerModelBlock.bindShader(shader, this.PerModelBinding);\r\n        }\r\n    }\r\n\r\n    public setPerFrameUniforms(view: mat4, proj: mat4): void {\r\n        this.uboPerFrameBlock.set(\"view\", view);\r\n        this.uboPerFrameBlock.set(\"view_inverse\", mat4.invert(temp, view)!);\r\n        this.uboPerFrameBlock.set(\"projection\", proj);\r\n        this.uboPerFrameBlock.set(\"view_projection\", mat4.mul(temp, proj, view));\r\n        this.uboPerFrameBlock.update(this.gl);\r\n\r\n        //console.dir(this.stats);\r\n        this.resetStats();\r\n    }\r\n\r\n    //Note: Setting Uniform blocks per draw call is not the best way.\r\n    //A single uniform block for all objects to be drawn should be used and set once per frame.\r\n    public setPerModelUniforms(model_matrix: mat4, view_matrix: mat4, proj_matrix: mat4): void {\r\n        this.uboPerModelBlock.set(\"model\", model_matrix);\r\n        this.uboPerModelBlock.set(\"model_view\", mat4.mul(modelview_matrix, view_matrix, model_matrix));\r\n\r\n        //NOTE: Does this bug if normalFromMat4 returns null?\r\n        normalview_matrix = mat3.normalFromMat4(normalview_matrix!, modelview_matrix);\r\n        if (normalview_matrix) this.uboPerModelBlock.set(\"normal_view\", normalview_matrix);\r\n        else throw new Error(\"Determinant could not be calculated for normalview_matrix\");\r\n\r\n        this.uboPerModelBlock.set(\"mvp\", mat4.mul(mvp_matrix, proj_matrix, modelview_matrix));\r\n        this.uboPerModelBlock.update(this.gl);\r\n    }\r\n\r\n    public setViewport(x: number, y: number, width: number, height: number): void {\r\n        this.viewport = { x, y, width, height };\r\n        this.gl.viewport(x, y, width, height);\r\n    }\r\n\r\n    public resetViewport(): void {\r\n        this.gl.viewport(this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height);\r\n    }\r\n\r\n    public draw(\r\n        draw_mode: number,\r\n        count: number,\r\n        offset: number,\r\n        index_buffer: IndexBuffer | undefined,\r\n        vertex_buffer: VertexBuffer,\r\n        mat: Material | undefined = undefined\r\n    ): void {\r\n        if (mat && mat.shader != this.current_shader) {\r\n            this.current_shader = mat.shader;\r\n            this.current_shader.use();\r\n            this.stats.shader_bind_count++;\r\n        }\r\n\r\n        if (mat && mat != this.current_material) {\r\n            this.current_material = mat;\r\n            this.current_material.activate(this.gl);\r\n            this.stats.material_bind_count++;\r\n        }\r\n\r\n        if (vertex_buffer != this.current_vertex_buffer) {\r\n            this.current_vertex_buffer = vertex_buffer;\r\n            this.current_vertex_buffer.bindBuffers(this.gl);\r\n            this.stats.vertex_buffer_bind_count++;\r\n        }\r\n\r\n        if (index_buffer && index_buffer != this.current_index_buffer) {\r\n            this.current_index_buffer = index_buffer;\r\n            this.current_index_buffer.bind(this.gl);\r\n            this.stats.index_buffer_bind_count++;\r\n        }\r\n\r\n        if (index_buffer) {\r\n            if (index_buffer.indices.BYTES_PER_ELEMENT === 2)\r\n                this.gl.drawElements(draw_mode, count, this.gl.UNSIGNED_SHORT, offset);\r\n            else if (index_buffer.indices.BYTES_PER_ELEMENT === 4)\r\n                this.gl.drawElements(draw_mode, count, this.gl.UNSIGNED_INT, offset);\r\n            else throw new Error(\"Unknown index buffer type\");\r\n            this.stats.index_draw_count += count;\r\n        } else {\r\n            this.gl.drawArrays(draw_mode, offset, count);\r\n            this.stats.vertex_draw_count += count;\r\n        }\r\n\r\n        this.stats.draw_calls++;\r\n    }\r\n\r\n    public resetStats(): void {\r\n        //console.dir(this.stats);\r\n        this.stats.reset();\r\n        this.current_shader = undefined;\r\n        this.current_material = undefined;\r\n    }\r\n\r\n    public static get EMPTY_TEXTURE(): WebGLTexture {\r\n        return this._EMPTY_TEXTURE;\r\n    }\r\n\r\n    public static get EMPTY_CUBE_TEXTURE(): WebGLTexture {\r\n        return this._EMPTY_CUBE_TEXTURE;\r\n    }\r\n\r\n    public static get BRDF_LUT_TEXTURE(): WebGLTexture | undefined {\r\n        return this._BRDF_LUT_TEXTURE;\r\n    }\r\n\r\n    public static set BRDF_LUT_TEXTURE(tex: WebGLTexture | undefined) {\r\n        this._BRDF_LUT_TEXTURE = tex;\r\n    }\r\n\r\n    public static GetShader(name: string): Shader | undefined {\r\n        return this._Shaders.get(name);\r\n    }\r\n}\r\n"],"names":["RendererStats","Texture2D","TextureCubeMap","ShaderSources","Shader","UniformBuffer"],"mappings":"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"}