{"version":3,"file":"Texture2D.js","sources":["../../../../iwo/src/graphics/Texture2D.ts"],"sourcesContent":["import { TextureHelper } from \"./TextureHelper\";\r\n\r\nexport interface Texture2DOptions {\r\n    width: number;\r\n    height: number;\r\n    wrap_S: number;\r\n    wrap_T: number;\r\n    mag_filter: number;\r\n    min_filter: number;\r\n    internal_format: number;\r\n    format: number;\r\n    type: number;\r\n    flip: boolean;\r\n}\r\n\r\nexport class Texture2D {\r\n    public texture_id: WebGLTexture;\r\n\r\n    public constructor(\r\n        gl: WebGL2RenderingContext,\r\n        source: ArrayBufferView | TexImageSource | undefined = undefined,\r\n        width: number = 0,\r\n        height: number = 0,\r\n        wrap_S: number = gl.REPEAT,\r\n        wrap_T: number = gl.REPEAT,\r\n        mag_filter: number = gl.LINEAR,\r\n        min_filter: number = gl.LINEAR_MIPMAP_LINEAR,\r\n        internal_format: number = gl.RGBA,\r\n        format: number = gl.RGBA,\r\n        type: number = gl.UNSIGNED_BYTE,\r\n        flip: boolean = false\r\n    ) {\r\n        this.texture_id = gl.createTexture()!;\r\n\r\n        if (source instanceof HTMLImageElement && source) {\r\n            if (source.complete && source.src)\r\n                this.setImage(gl, source, wrap_S, wrap_T, mag_filter, min_filter, internal_format, format, type, flip);\r\n            else {\r\n                //prettier-ignore\r\n                source.addEventListener(\"load\", () => {\r\n                    this.setImage(gl, source, wrap_S, wrap_T, mag_filter, min_filter, internal_format, format, type, flip);\r\n                }, {once: true});\r\n            }\r\n        } else if (source && TextureHelper.isArrayBufferView(source)) {\r\n            //prettier-ignore\r\n            this.setImageByBuffer(gl, source as ArrayBufferView, width, height, wrap_S, wrap_T, mag_filter, min_filter,\r\n                internal_format, format, type, flip);\r\n        } else if (source) {\r\n            //prettier-ignore\r\n            this.setImage(gl, source as TexImageSource, wrap_S, wrap_T, mag_filter, min_filter, internal_format,\r\n                format, type, flip);\r\n        } else if (width !== 0 && height !== 0) {\r\n            //prettier-ignore\r\n            //Making empty texture of some width and height because you want to render to it\r\n            this.setImageByBuffer(gl, null, width, height, wrap_S, wrap_T, mag_filter, min_filter, internal_format,\r\n                format, type, flip);\r\n        } else {\r\n            //No image or buffer sets texture to pink black checkerboard\r\n            //This should probably happen at the material loading level and not during texture setting\r\n            //prettier-ignore\r\n            this.setImageByBuffer(gl, TextureHelper.PINK_BLACK_CHECKERBOARD, 8, 8, gl.REPEAT,\r\n                gl.MIRRORED_REPEAT, gl.NEAREST, gl.NEAREST);\r\n        }\r\n    }\r\n\r\n    public bind(gl: WebGL2RenderingContext, location: number): void {\r\n        gl.activeTexture(gl.TEXTURE0 + location);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture_id);\r\n    }\r\n\r\n    public setImage(\r\n        gl: WebGL2RenderingContext,\r\n        image: TexImageSource,\r\n        wrap_S: number = gl.REPEAT,\r\n        wrap_T: number = gl.REPEAT,\r\n        mag_filter: number = gl.LINEAR,\r\n        min_filter: number = gl.LINEAR_MIPMAP_LINEAR,\r\n        internal_format: number = gl.RGBA,\r\n        format: number = gl.RGBA,\r\n        type: number = gl.UNSIGNED_BYTE,\r\n        flip: boolean = true\r\n    ): void {\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture_id);\r\n        //prettier-ignore\r\n        TextureHelper.texParameterImage(gl, gl.TEXTURE_2D, image, wrap_S, wrap_T, undefined, mag_filter, \r\n            min_filter, internal_format, format, type, flip);\r\n    }\r\n\r\n    public setImageByBuffer(\r\n        gl: WebGL2RenderingContext,\r\n        buffer: ArrayBufferView | null,\r\n        width: number,\r\n        height: number,\r\n        wrap_S: number = gl.REPEAT,\r\n        wrap_T: number = gl.REPEAT,\r\n        mag_filter: number = gl.LINEAR,\r\n        min_filter: number = gl.LINEAR_MIPMAP_LINEAR,\r\n        internal_format: number = gl.RGBA,\r\n        format: number = gl.RGBA,\r\n        type: number = gl.UNSIGNED_BYTE,\r\n        flip: boolean = true\r\n    ): void {\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture_id);\r\n        //prettier-ignore\r\n        TextureHelper.texParameterBuffer(gl, gl.TEXTURE_2D, buffer, width, height, wrap_S, wrap_T, undefined,\r\n            mag_filter, min_filter, internal_format, format, type, flip);\r\n    }\r\n\r\n    public destroy(gl: WebGL2RenderingContext): void {\r\n        gl.deleteTexture(this.texture_id);\r\n    }\r\n}\r\n"],"names":["TextureHelper"],"mappings":"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"}