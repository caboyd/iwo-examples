{"version":3,"file":"PBRShader.js","sources":["../../../../../iwo/src/graphics/shader/PBRShader.ts"],"sourcesContent":["import { Shader } from \"./Shader\";\r\nimport { Renderer } from \"../Renderer\";\r\nimport { ShaderSource } from \"./ShaderSources\";\r\n\r\nexport class PBRShader extends Shader {\r\n    public constructor(\r\n        gl: WebGL2RenderingContext,\r\n        vertexSourceCode: string = ShaderSource.PBR.vert,\r\n        fragmentSourceCode: string = ShaderSource.PBR.frag\r\n    ) {\r\n        super(gl, vertexSourceCode, fragmentSourceCode);\r\n        this.use();\r\n        this.setUniform(\"gamma\", 2.2);\r\n        this.setUniform(\"u_material.albedo_sampler\", 0);\r\n        this.setUniform(\"u_material.irradiance_sampler\", 1);\r\n        this.setUniform(\"u_material.env_sampler\", 2);\r\n        this.setUniform(\"u_material.normal_sampler\", 3);\r\n        this.setUniform(\"u_material.occlusion_sampler\", 4);\r\n        this.setUniform(\"u_material.metal_roughness_sampler\", 5);\r\n        this.setUniform(\"u_material.emissive_sampler\", 6);\r\n        this.setUniform(\"u_material.brdf_LUT_sampler\", 7);\r\n    }\r\n\r\n    public use(): void {\r\n        const gl = this.gl;\r\n        gl.useProgram(this.ID);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, Renderer.EMPTY_TEXTURE);\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, Renderer.EMPTY_CUBE_TEXTURE);\r\n        gl.activeTexture(gl.TEXTURE2);\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, Renderer.EMPTY_CUBE_TEXTURE);\r\n        gl.activeTexture(gl.TEXTURE3);\r\n        gl.bindTexture(gl.TEXTURE_2D, Renderer.EMPTY_TEXTURE);\r\n        gl.activeTexture(gl.TEXTURE4);\r\n        gl.bindTexture(gl.TEXTURE_2D, Renderer.EMPTY_TEXTURE);\r\n        gl.activeTexture(gl.TEXTURE5);\r\n        gl.bindTexture(gl.TEXTURE_2D, Renderer.EMPTY_TEXTURE);\r\n        gl.activeTexture(gl.TEXTURE6);\r\n        gl.bindTexture(gl.TEXTURE_2D, Renderer.EMPTY_TEXTURE);\r\n        gl.activeTexture(gl.TEXTURE7);\r\n        gl.bindTexture(gl.TEXTURE_2D, Renderer.EMPTY_TEXTURE);\r\n    }\r\n}\r\n"],"names":["Shader","Renderer"],"mappings":";;;;MAIa,SAAU,SAAQA,QAAM;IACjC,YACI,EAA0B,EAC1B,mBAA2B,YAAY,CAAC,GAAG,CAAC,IAAI,EAChD,qBAA6B,YAAY,CAAC,GAAG,CAAC,IAAI;QAElD,KAAK,CAAC,EAAE,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;QAChD,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,CAAC,+BAA+B,EAAE,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,UAAU,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,UAAU,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC;KACrD;IAEM,GAAG;QACN,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACvB,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC9B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAEC,UAAQ,CAAC,aAAa,CAAC,CAAC;QACtD,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC9B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,gBAAgB,EAAEA,UAAQ,CAAC,kBAAkB,CAAC,CAAC;QACjE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC9B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,gBAAgB,EAAEA,UAAQ,CAAC,kBAAkB,CAAC,CAAC;QACjE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC9B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAEA,UAAQ,CAAC,aAAa,CAAC,CAAC;QACtD,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC9B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAEA,UAAQ,CAAC,aAAa,CAAC,CAAC;QACtD,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC9B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAEA,UAAQ,CAAC,aAAa,CAAC,CAAC;QACtD,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC9B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAEA,UAAQ,CAAC,aAAa,CAAC,CAAC;QACtD,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC9B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAEA,UAAQ,CAAC,aAAa,CAAC,CAAC;KACzD;;;;;"}