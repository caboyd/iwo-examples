{"version":3,"file":"Shader.js","sources":["../../../../../iwo/src/graphics/shader/Shader.ts"],"sourcesContent":["import { mat3, mat4 } from \"gl-matrix\";\r\nimport { Uniform } from \"../Uniform\";\r\n\r\nconst modelview_matrix: mat4 = mat4.create();\r\nconst normalview_matrix: mat3 = mat3.create();\r\nconst mvp_matrix: mat4 = mat4.create();\r\n\r\nexport class Shader {\r\n    public uniforms: Map<string, Uniform>;\r\n    public attributes: Map<string, GLint>;\r\n    public readonly ID: WebGLProgram;\r\n    public readonly gl: WebGL2RenderingContext;\r\n\r\n    public constructor(gl: WebGL2RenderingContext, vertexSourceCode: string, fragmentSourceCode: string) {\r\n        this.gl = gl;\r\n\r\n        const vertexShader: WebGLShader = Shader.getCompiledShader(gl, vertexSourceCode, gl.VERTEX_SHADER);\r\n        const fragmentShader: WebGLShader = Shader.getCompiledShader(gl, fragmentSourceCode, gl.FRAGMENT_SHADER);\r\n\r\n        this.ID = gl.createProgram()!;\r\n        gl.attachShader(this.ID, vertexShader);\r\n        gl.attachShader(this.ID, fragmentShader);\r\n        gl.linkProgram(this.ID);\r\n\r\n        if (!gl.getProgramParameter(this.ID, gl.LINK_STATUS)) {\r\n            alert(\"Could not initialize shaders\");\r\n        }\r\n\r\n        //TODO: Copy what twgl does and get the uniform names from the shader, before the user does\r\n        this.uniforms = new Map<string, Uniform>();\r\n        this.attributes = new Map<string, GLint>();\r\n        this.initUniforms();\r\n    }\r\n\r\n    public initUniforms(): void {\r\n        const gl = this.gl;\r\n        const num_uniforms = gl.getProgramParameter(this.ID, gl.ACTIVE_UNIFORMS);\r\n        for (let i = 0; i < num_uniforms; i++) {\r\n            const info: WebGLActiveInfo = gl.getActiveUniform(this.ID, i)!;\r\n            this.uniforms.set(info.name, new Uniform(gl, this.ID, info));\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    public setUniform(name: string, value: any | any[]): void {\r\n        const uniform = this.uniforms.get(name);\r\n        if (uniform) uniform.set(value);\r\n    }\r\n\r\n    public setModelViewBlock(model_matrix: mat4, view_matrix: mat4, proj_matrix: mat4): void {\r\n        //Model view matrix\r\n        mat4.mul(modelview_matrix, view_matrix, model_matrix);\r\n\r\n        //Normal matrix in view space\r\n        // mat3.normalFromMat4(normalview_matrix,model_matrix);\r\n        // this.setMat3ByName(\"u_normal_matrix\", normalview_matrix);\r\n        mat3.normalFromMat4(normalview_matrix, modelview_matrix);\r\n\r\n        //MVP Matrix\r\n        mat4.mul(mvp_matrix, proj_matrix, modelview_matrix);\r\n\r\n        //   this.setMat4ByName(\"u_model_matrix\", model_matrix);\r\n        this.setUniform(\"u_view_matrix\", view_matrix);\r\n        this.setUniform(\"u_modelview_matrix\", modelview_matrix);\r\n        this.setUniform(\"u_normalview_matrix\", normalview_matrix);\r\n        this.setUniform(\"u_mvp_matrix\", mvp_matrix);\r\n        console.dir(mvp_matrix);\r\n    }\r\n\r\n    public setViewProjBlock(view_matrix: mat4, proj_matrix: mat4): void {\r\n        mat4.mul(mvp_matrix, proj_matrix, view_matrix);\r\n        this.setUniform(\"u_view_matrix\", view_matrix);\r\n        this.setUniform(\"u_proj_matrix\", proj_matrix);\r\n        this.setUniform(\"u_vp_matrix\", mvp_matrix);\r\n    }\r\n\r\n    public delete(): void {\r\n        this.gl.deleteShader(this.ID);\r\n    }\r\n\r\n    public use(): void {\r\n        this.gl.useProgram(this.ID);\r\n    }\r\n\r\n    public setAttributes(attr: string[]): void {\r\n        for (let a of attr) {\r\n            this.attributes.set(a, this.gl.getAttribLocation(this.ID, a));\r\n        }\r\n    }\r\n\r\n    public setUniforms(uniforms: Map<string, any>): void {\r\n        for (let [name, value] of uniforms) {\r\n            if (value) this.setUniform(name, value);\r\n        }\r\n    }\r\n\r\n    private static getCompiledShader(gl: WebGL2RenderingContext, sourceCode: string, type: number): WebGLShader {\r\n        let shader: WebGLShader;\r\n        shader = gl.createShader(type)!;\r\n\r\n        gl.shaderSource(shader, sourceCode);\r\n        gl.compileShader(shader);\r\n\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            alert(gl.getShaderInfoLog(shader));\r\n        }\r\n        return shader;\r\n    }\r\n}\r\n"],"names":["Uniform"],"mappings":"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"}