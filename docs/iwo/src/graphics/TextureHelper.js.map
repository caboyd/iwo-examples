{"version":3,"file":"TextureHelper.js","sources":["../../../../iwo/src/graphics/TextureHelper.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/**\r\n * Created by Chris on May, 2019\r\n */\r\nimport { TextureOptions } from \"graphics/Texture2D\";\r\nimport { TextureCubeMapOptions } from \"graphics/TextureCubeMap\";\r\n\r\ntype TextureType =\r\n    | WebGL2RenderingContext[\"TEXTURE_2D\"]\r\n    | WebGL2RenderingContext[\"TEXTURE_CUBE_MAP\"]\r\n    | WebGL2RenderingContext[\"TEXTURE_3D\"]\r\n    | WebGL2RenderingContext[\"TEXTURE_2D_ARRAY\"];\r\n\r\nexport namespace TextureHelper {\r\n    export function texParameterBuffer(\r\n        gl: WebGL2RenderingContext,\r\n        texture_type: TextureType,\r\n        buffer: ArrayBufferView | null,\r\n        options: TextureOptions\r\n    ): void {\r\n        const o = options;\r\n        texParamHelperStart(gl, o.min_filter, o.format, o.flip);\r\n\r\n        if (texture_type == gl.TEXTURE_CUBE_MAP) {\r\n            for (let i = 0; i < 6; i++) {\r\n                // note that we store each face with 16 bit floating point values\r\n                //prettier-ignore\r\n                gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, o.internal_format, o.width, o.height,\r\n                    0, o.format, o.type, buffer);\r\n            }\r\n        } else if (texture_type == gl.TEXTURE_2D) {\r\n            gl.texImage2D(texture_type, 0, o.internal_format, o.width, o.height, 0, o.format, o.type, buffer);\r\n        } else {\r\n            throw new Error(`texture type ${texture_type} not supported.`);\r\n        }\r\n\r\n        texParamHelperEnd(gl, texture_type, options);\r\n    }\r\n\r\n    export function texParameterImage(\r\n        gl: WebGL2RenderingContext,\r\n        texture_type: TextureType,\r\n        image: TexImageSource,\r\n        options: TextureOptions | TextureCubeMapOptions\r\n    ): void {\r\n        const o = options;\r\n        texParamHelperStart(gl, o.min_filter, o.format, o.flip);\r\n        if (texture_type == gl.TEXTURE_CUBE_MAP) {\r\n            for (let i = 0; i < 6; i++) {\r\n                // note that we store each face with 16 bit floating point values\r\n                //prettier-ignore\r\n                gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, o.internal_format, o.format, options.type,\r\n                    image as ImageData);\r\n            }\r\n        } else if (texture_type == gl.TEXTURE_2D) {\r\n            gl.texImage2D(texture_type, 0, o.internal_format, o.format, o.type, image as ImageData);\r\n        } else {\r\n            throw new Error(`texture type ${texture_type} not supported.`);\r\n        }\r\n\r\n        texParamHelperEnd(gl, texture_type, o);\r\n    }\r\n\r\n    function texParamHelperStart(gl: WebGL2RenderingContext, min_filter: number, format: number, flip: boolean): void {\r\n        const ext = gl.getExtension(\"OES_texture_float_linear\");\r\n        //Assert float linear supported if using float textures with linear filtering\r\n        //one of gl.LINEAR, gl.LINEAR_MIPMAP_NEAREST, gl.NEAREST_MIPMAP_LINEAR, or gl.LINEAR_MIPMAP_LINEAR\r\n        if (\r\n            !ext &&\r\n            (format == gl.FLOAT || format == gl.HALF_FLOAT) &&\r\n            min_filter != gl.NEAREST &&\r\n            min_filter != gl.NEAREST_MIPMAP_NEAREST\r\n        )\r\n            throw new Error(\"OES_texture_float_linear not available.\");\r\n\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flip);\r\n    }\r\n\r\n    function texParamHelperEnd(gl: WebGL2RenderingContext, texture_type: TextureType, options: TextureOptions): void {\r\n        gl.texParameteri(texture_type, gl.TEXTURE_WRAP_S, options.wrap_S);\r\n        gl.texParameteri(texture_type, gl.TEXTURE_WRAP_T, options.wrap_T);\r\n        gl.texParameteri(texture_type, gl.TEXTURE_WRAP_R, options.wrap_R);\r\n        gl.texParameteri(texture_type, gl.TEXTURE_MAG_FILTER, options.mag_filter);\r\n        gl.texParameteri(texture_type, gl.TEXTURE_MIN_FILTER, options.min_filter);\r\n        if (\r\n            [\r\n                gl.LINEAR_MIPMAP_LINEAR,\r\n                gl.LINEAR_MIPMAP_NEAREST,\r\n                gl.NEAREST_MIPMAP_LINEAR,\r\n                gl.NEAREST_MIPMAP_NEAREST,\r\n            ].includes(options.min_filter)\r\n        )\r\n            gl.generateMipmap(texture_type);\r\n    }\r\n\r\n    export function isArrayBufferView(value: any): value is ArrayBufferView {\r\n        return value && value.buffer instanceof ArrayBuffer && value.byteLength !== undefined;\r\n    }\r\n\r\n    const arr = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n            if (i & 1)\r\n                //prettier-ignore\r\n                arr.push(\r\n                    0, 0, 0, 255, // black\r\n                    255, 0, 255, 255 //pink\r\n                );\r\n            else\r\n                //prettier-ignore\r\n                arr.push(\r\n                    255, 0, 255, 255, //pink\r\n                    0, 0, 0, 255 // black\r\n                );\r\n        }\r\n    }\r\n    export const PINK_BLACK_CHECKERBOARD = new Uint8Array(arr);\r\n}\r\n"],"names":[],"mappings":"IAaiB,cAwGhB;AAxGD,WAAiB,aAAa;IAC1B,SAAgB,kBAAkB,CAC9B,EAA0B,EAC1B,YAAyB,EACzB,MAA8B,EAC9B,OAAuB;QAEvB,MAAM,CAAC,GAAG,OAAO,CAAC;QAClB,mBAAmB,CAAC,EAAE,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;QAExD,IAAI,YAAY,IAAI,EAAE,CAAC,gBAAgB,EAAE;YACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;;;gBAGxB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,2BAA2B,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,EACrF,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;aACpC;SACJ;aAAM,IAAI,YAAY,IAAI,EAAE,CAAC,UAAU,EAAE;YACtC,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACrG;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,gBAAgB,YAAY,iBAAiB,CAAC,CAAC;SAClE;QAED,iBAAiB,CAAC,EAAE,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAChD;IAvBe,gCAAkB,qBAuBjC,CAAA;IAED,SAAgB,iBAAiB,CAC7B,EAA0B,EAC1B,YAAyB,EACzB,KAAqB,EACrB,OAA+C;QAE/C,MAAM,CAAC,GAAG,OAAO,CAAC;QAClB,mBAAmB,CAAC,EAAE,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,YAAY,IAAI,EAAE,CAAC,gBAAgB,EAAE;YACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;;;gBAGxB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,2BAA2B,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAC1F,KAAkB,CAAC,CAAC;aAC3B;SACJ;aAAM,IAAI,YAAY,IAAI,EAAE,CAAC,UAAU,EAAE;YACtC,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,KAAkB,CAAC,CAAC;SAC3F;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,gBAAgB,YAAY,iBAAiB,CAAC,CAAC;SAClE;QAED,iBAAiB,CAAC,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;KAC1C;IAtBe,+BAAiB,oBAsBhC,CAAA;IAED,SAAS,mBAAmB,CAAC,EAA0B,EAAE,UAAkB,EAAE,MAAc,EAAE,IAAa;QACtG,MAAM,GAAG,GAAG,EAAE,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC;;;QAGxD,IACI,CAAC,GAAG;aACH,MAAM,IAAI,EAAE,CAAC,KAAK,IAAI,MAAM,IAAI,EAAE,CAAC,UAAU,CAAC;YAC/C,UAAU,IAAI,EAAE,CAAC,OAAO;YACxB,UAAU,IAAI,EAAE,CAAC,sBAAsB;YAEvC,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;QAE/D,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;KAChD;IAED,SAAS,iBAAiB,CAAC,EAA0B,EAAE,YAAyB,EAAE,OAAuB;QACrG,EAAE,CAAC,aAAa,CAAC,YAAY,EAAE,EAAE,CAAC,cAAc,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAClE,EAAE,CAAC,aAAa,CAAC,YAAY,EAAE,EAAE,CAAC,cAAc,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAClE,EAAE,CAAC,aAAa,CAAC,YAAY,EAAE,EAAE,CAAC,cAAc,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAClE,EAAE,CAAC,aAAa,CAAC,YAAY,EAAE,EAAE,CAAC,kBAAkB,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QAC1E,EAAE,CAAC,aAAa,CAAC,YAAY,EAAE,EAAE,CAAC,kBAAkB,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QAC1E,IACI;YACI,EAAE,CAAC,oBAAoB;YACvB,EAAE,CAAC,qBAAqB;YACxB,EAAE,CAAC,qBAAqB;YACxB,EAAE,CAAC,sBAAsB;SAC5B,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC;YAE9B,EAAE,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;KACvC;IAED,SAAgB,iBAAiB,CAAC,KAAU;QACxC,OAAO,KAAK,IAAI,KAAK,CAAC,MAAM,YAAY,WAAW,IAAI,KAAK,CAAC,UAAU,KAAK,SAAS,CAAC;KACzF;IAFe,+BAAiB,oBAEhC,CAAA;IAED,MAAM,GAAG,GAAG,EAAE,CAAC;IACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,IAAI,CAAC,GAAG,CAAC;;gBAEL,GAAG,CAAC,IAAI,CACJ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG;gBACZ,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG;iBACnB,CAAC;;;gBAGF,GAAG,CAAC,IAAI,CACJ,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG;gBAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG;iBACf,CAAC;SACT;KACJ;IACY,qCAAuB,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;AAC/D,CAAC,EAxGgB,aAAa,KAAb,aAAa;;;;"}