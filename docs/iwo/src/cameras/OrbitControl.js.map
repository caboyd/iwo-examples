{"version":3,"file":"OrbitControl.js","sources":["../../../../iwo/src/cameras/OrbitControl.ts"],"sourcesContent":["import { Camera, Camera_Movement } from \"./Camera\";\r\nimport { mat4, vec3, vec4 } from \"gl-matrix\";\r\n\r\nexport interface OrbitControlOptions {\r\n    mouse_sensitivity: number;\r\n    orbit_point: vec3;\r\n    minimum_distance: number;\r\n    maximum_distance: number;\r\n    orbit_control_binds: OrbitControlBinds;\r\n}\r\n\r\nexport interface OrbitControlBinds {\r\n    LEFT: string;\r\n    RIGHT: string;\r\n    UP: string;\r\n    DOWN: string;\r\n}\r\n\r\nexport const DefaultOrbitControlBinds: OrbitControlBinds = {\r\n    LEFT: \"ArrowLeft\",\r\n    RIGHT: \"ArrowRight\",\r\n    UP: \"ArrowUp\",\r\n    DOWN: \"ArrowDown\",\r\n};\r\n\r\nexport class OrbitControl {\r\n    private camera: Camera;\r\n\r\n    private target_pitch: number = 0;\r\n    private target_heading: number = 0;\r\n\r\n    private readonly mouse_sensitivity: number = 0.005;\r\n    private readonly step_size: number = 0.5;\r\n    public minimum_distance: number = 5.0;\r\n    public maximum_distance: number = 10.0;\r\n    private readonly orbit_control_binds: OrbitControlBinds = DefaultOrbitControlBinds;\r\n    public orbit_point: vec3 = [0, 0, 0];\r\n\r\n    public constructor(camera: Camera, options?: Partial<OrbitControlOptions>) {\r\n        this.camera = camera;\r\n        this.mouse_sensitivity = options?.mouse_sensitivity ?? this.mouse_sensitivity;\r\n        this.orbit_point = options?.orbit_point ?? this.orbit_point;\r\n        this.minimum_distance = options?.minimum_distance ?? this.minimum_distance;\r\n        this.maximum_distance = options?.maximum_distance ?? this.maximum_distance;\r\n        this.orbit_control_binds = options?.orbit_control_binds ?? this.orbit_control_binds;\r\n        this.camera.lookAt(this.orbit_point);\r\n\r\n        window.addEventListener(\"keydown\", (e: KeyboardEvent) => {\r\n            if (Object.values(this.orbit_control_binds).includes(e.code)) this.processKeyboard(e.code);\r\n        });\r\n\r\n        window.addEventListener(\"wheel\", (e: WheelEvent) => {\r\n            e.stopPropagation();\r\n            this.scroll(e.deltaY > 0);\r\n        });\r\n    }\r\n\r\n    public update(): void {}\r\n\r\n    public processKeyboard(key: string): void {\r\n        const target_to_camera = vec3.sub(vec3.create(), this.camera.position, this.orbit_point);\r\n        if (key === this.orbit_control_binds.LEFT) {\r\n            //move camera based on step_size\r\n            vec3.scaleAndAdd(this.camera.position, this.camera.position, this.camera.getRight(), -this.step_size);\r\n        } else if (key === this.orbit_control_binds.RIGHT) {\r\n            vec3.scaleAndAdd(this.camera.position, this.camera.position, this.camera.getRight(), this.step_size);\r\n        } else if (key === this.orbit_control_binds.UP) {\r\n            vec3.scaleAndAdd(this.camera.position, this.camera.position, this.camera.up, this.step_size);\r\n        } else if (key === this.orbit_control_binds.DOWN) {\r\n            vec3.scaleAndAdd(this.camera.position, this.camera.position, this.camera.up, -this.step_size);\r\n        }\r\n        //place orbit point to same relative position\r\n        vec3.sub(this.orbit_point, this.camera.position, target_to_camera);\r\n        this.camera.lookAt(this.orbit_point);\r\n    }\r\n\r\n    public scroll(scroll_direction_forward: boolean): void {\r\n        let target_to_camera = vec3.sub(vec3.create(), this.camera.position, this.orbit_point);\r\n        const dist = vec3.len(target_to_camera);\r\n        let step_scaled_dist = dist + this.step_size * (scroll_direction_forward ? 1 : -1);\r\n        step_scaled_dist = Math.max(this.minimum_distance, step_scaled_dist);\r\n        step_scaled_dist = Math.min(this.maximum_distance, step_scaled_dist);\r\n\r\n        //Rescale vector\r\n        target_to_camera = vec3.normalize(target_to_camera, target_to_camera);\r\n        target_to_camera = vec3.scale(target_to_camera, target_to_camera, step_scaled_dist);\r\n\r\n        //Set camera back to scaled vector position\r\n        vec3.add(this.camera.position, this.orbit_point, target_to_camera);\r\n    }\r\n\r\n    public processMouseMovement(xOffset: number, yOffset: number, constrainPitch: boolean = true): void {\r\n        if (xOffset === 0 && yOffset === 0) return;\r\n\r\n        //rotate about orbit_point\r\n\r\n        xOffset *= this.mouse_sensitivity;\r\n        yOffset *= this.mouse_sensitivity;\r\n\r\n        const angle_y = vec3.angle(this.camera.getForward(), this.camera.up);\r\n\r\n        if (constrainPitch) {\r\n            if (angle_y > Math.PI * 0.99 && yOffset < 0) yOffset = 0;\r\n            if (angle_y < Math.PI * 0.01 && yOffset > 0) yOffset = 0;\r\n        }\r\n\r\n        this.rotateAroundTarget(this.orbit_point, xOffset, yOffset);\r\n    }\r\n\r\n    private rotateAroundTarget(target: vec3, x: number, y: number): void {\r\n        //pitch up down\r\n        let new_pos = vec3.sub(vec3.create(), this.camera.position, target);\r\n\r\n        const m = mat4.create();\r\n\r\n        //pitch up down\r\n        mat4.rotate(m, m, y, this.camera.getRight());\r\n        //yaw left right\r\n        mat4.rotate(m, m, x, this.camera.up);\r\n\r\n        let p = vec4.fromValues(new_pos[0], new_pos[1], new_pos[2], 1);\r\n        p = vec4.transformMat4(p, p, m);\r\n        vec3.set(new_pos, p[0], p[1], p[2]);\r\n\r\n        new_pos = vec3.add(new_pos, new_pos, target);\r\n        this.camera.position = new_pos;\r\n        this.camera.lookAt(target);\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}