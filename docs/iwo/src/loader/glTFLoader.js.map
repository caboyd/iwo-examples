{"version":3,"file":"glTFLoader.js","sources":["../../../../iwo/src/loader/glTFLoader.ts"],"sourcesContent":["import { FileLoader } from \"./FileLoader\";\r\nimport { AttributeType } from \"geometry/Geometry\";\r\nimport { Accessor, glTF, MeshPrimitive } from \"loader/spec/glTF\";\r\nimport { Attribute, BufferedGeometry, DefaultAttribute } from \"geometry/BufferedGeometry\";\r\nimport { Material } from \"materials/Material\";\r\nimport { ImageLoader } from \"loader/ImageLoader\";\r\nimport { ComponentType } from \"graphics/WebglConstants\";\r\nimport { TypedArray } from \"types/types\";\r\nimport { PBRMaterial } from \"materials/PBRMaterial\";\r\nimport { vec3 } from \"gl-matrix\";\r\nimport { Texture2D } from \"graphics/Texture2D\";\r\n\r\nexport interface glTFData {\r\n    buffered_geometries: BufferedGeometry[];\r\n    materials: Material[];\r\n}\r\n\r\ninterface BufferView {\r\n    buffer: ArrayBuffer;\r\n    target: 34962 | 34963 | number;\r\n}\r\n\r\nclass Color {\r\n    public readonly data: readonly [number, number, number, number];\r\n\r\n    public constructor(r?: number | number[], g?: number, b?: number, a?: number) {\r\n        if (Array.isArray(r)) {\r\n            const [red, green, blue, alpha] = r;\r\n            this.data = [red, green ?? red, blue ?? red, alpha ?? 1];\r\n        } else {\r\n            const red = r ?? 1.0;\r\n            this.data = [red, g ?? red, b ?? red, a ?? 1];\r\n        }\r\n    }\r\n\r\n    public get rgb(): vec3 {\r\n        return this.data.slice(0, 3) as vec3;\r\n    }\r\n\r\n    public get rbga(): [number, number, number, number] {\r\n        return [...this.data];\r\n    }\r\n}\r\n\r\nexport class glTFLoader {\r\n    public static async promise(file_name: string, base_url: string = FileLoader.Default_Base_URL): Promise<glTFData> {\r\n        return new Promise<glTFData>(resolve => {\r\n            FileLoader.promise(file_name, base_url).then((response: Response) => {\r\n                response.json().then(async (o: glTF) => {\r\n                    //Validate toplevel\r\n                    if (o.meshes === undefined) glTFLoaderError(o.meshes);\r\n                    if (o.buffers === undefined) glTFLoaderError(o.buffers);\r\n                    if (o.bufferViews === undefined) glTFLoaderError(o.bufferViews);\r\n                    if (o.accessors === undefined) glTFLoaderError(o.accessors);\r\n\r\n                    const buffers = (await FileLoader.promiseAll(\r\n                        o.buffers.map(v => v.uri!),\r\n                        base_url\r\n                    )) as Response[];\r\n\r\n                    const array_buffers = await Promise.all(buffers.map(v => v.arrayBuffer()));\r\n\r\n                    // const typed_buffer_view = new Map<[number, ComponentType], TypedArray>();\r\n\r\n                    // const geom_buffers: BufferView[] = [];\r\n                    // for (const buffer_view of o.bufferViews) {\r\n                    //     if (buffer_view.target === undefined)\r\n                    //         throw new Error(\"Unexpected glTF bufferview with no target\");\r\n                    //     geom_buffers.push({\r\n                    //         buffer: new DataView(\r\n                    //             array_buffers[buffer_view.buffer],\r\n                    //             buffer_view.byteOffset ?? 0,\r\n                    //             buffer_view.byteLength\r\n                    //         ),\r\n                    //         target: buffer_view.target,\r\n                    //     });\r\n                    // }\r\n                    //convert DataViews to proper buffers\r\n\r\n                    //    const typed_buffers = array_buffers.map(b => new Uint8Array(b));\r\n                    // console.log(array_buffers);\r\n                    // console.log(geom_buffers);\r\n\r\n                    let images: HTMLImageElement[] = [];\r\n                    if (o.images) {\r\n                        images = ImageLoader.loadAllBackground(\r\n                            o.images.map(v => v.uri!),\r\n                            base_url\r\n                        );\r\n                    }\r\n\r\n                    const buffered_geometries = [];\r\n\r\n                    for (const mesh of o.meshes) {\r\n                        const x = new BufferedGeometry();\r\n                        //x.buffers = geom_buffers;\r\n                        if (mesh.primitives.length === 0) throw new Error(\"glTF missing mesh primitives\");\r\n                        if (mesh.primitives.length > 1)\r\n                            throw new Error(\"Don't know how to handle more than one primitive per mesh\");\r\n                        // for (const prim of mesh.primitives) {\r\n                        //     //FIXME: this is not covering any case except one where we have indices and no submesh\r\n                        //     const group = {\r\n                        //         offset: 0,\r\n                        //         //use indices count\r\n                        //         count:\r\n                        //             prim.indices !== undefined\r\n                        //                 ? o.accessors![prim.indices].count\r\n                        //                 : o.accessors![prim.attributes[\"POSITION\"]].count,\r\n                        //         material_index: prim.material,\r\n                        //     } as Group;\r\n                        //     groups.push(group);\r\n                        // }\r\n                        const prim = mesh.primitives[0]!;\r\n                        if (prim.indices !== undefined) {\r\n                            const accessor = o.accessors[prim.indices];\r\n                            const buffer_view = o.bufferViews[accessor.bufferView!];\r\n                            const count = accessor.count;\r\n                            const componentType = accessor.componentType;\r\n                            const buffer_index = buffer_view.buffer;\r\n                            const offset = buffer_view.byteOffset;\r\n                            const bytes = count > 66536 ? 4 : 2;\r\n                            const length = buffer_view.byteLength / bytes;\r\n                            x.index_buffer = {\r\n                                buffer: ArrayBufferToTypedArray(\r\n                                    componentType,\r\n                                    array_buffers[buffer_index],\r\n                                    offset,\r\n                                    length\r\n                                ),\r\n                                target: 34963,\r\n                            };\r\n                            //  x.index_buffer =\r\n                            //        {\r\n                            //            buffer: count > 66536\r\n                            //            ? geom_buffers[o.accessors[prim.indices].bufferView!].buffer.getUint32(0)\r\n                            //            : await geom_buffers[o.accessors[prim.indices].bufferView!].buffer.getUint16(0);\r\n                            // target:geom_buffers[o.accessors[prim.indices].bufferView!].target\r\n                            //        } as GeometryBuffer\r\n                        }\r\n\r\n                        let my_buffer_index = 0;\r\n                        x.attributes = DefaultAttribute.SingleBufferApproach();\r\n                        let attrib_index: number | undefined;\r\n                        let a = x.attributes[AttributeType.Vertex];\r\n                        if ((attrib_index = prim.attributes[\"POSITION\"]) !== undefined) {\r\n                            this.buildAttributeAndTypedBuffer(\r\n                                o,\r\n                                AttributeType.Vertex,\r\n                                o.accessors![attrib_index]!,\r\n                                x,\r\n                                array_buffers,\r\n                                a,\r\n                                my_buffer_index++\r\n                            );\r\n                        } else {\r\n                            a.enabled = false;\r\n                        }\r\n\r\n                        a = x.attributes[AttributeType.Tex_Coord];\r\n                        if ((attrib_index = prim.attributes[\"TEXCOORD_0\"]) !== undefined) {\r\n                            this.buildAttributeAndTypedBuffer(\r\n                                o,\r\n                                AttributeType.Tex_Coord,\r\n                                o.accessors![attrib_index]!,\r\n                                x,\r\n                                array_buffers,\r\n                                a,\r\n                                my_buffer_index++\r\n                            );\r\n                        } else {\r\n                            a.enabled = false;\r\n                        }\r\n\r\n                        a = x.attributes[AttributeType.Normal];\r\n                        if ((attrib_index = prim.attributes[\"NORMAL\"]) !== undefined) {\r\n                            this.buildAttributeAndTypedBuffer(\r\n                                o,\r\n                                AttributeType.Normal,\r\n                                o.accessors![attrib_index]!,\r\n                                x,\r\n                                array_buffers,\r\n                                a,\r\n                                my_buffer_index++\r\n                            );\r\n                        } else {\r\n                            a.enabled = false;\r\n                        }\r\n\r\n                        a = x.attributes[AttributeType.Tangent];\r\n                        if ((attrib_index = prim.attributes[\"TANGENT\"]) !== undefined) {\r\n                            this.buildAttributeAndTypedBuffer(\r\n                                o,\r\n                                AttributeType.Tangent,\r\n                                o.accessors![attrib_index]!,\r\n                                x,\r\n                                array_buffers,\r\n                                a,\r\n                                my_buffer_index++\r\n                            );\r\n                        } else {\r\n                            a.enabled = false;\r\n                        }\r\n\r\n                        buffered_geometries.push(x);\r\n                    }\r\n                    const materials = [];\r\n                    if (o.materials !== undefined)\r\n                        for (const mat of o.materials) {\r\n                            const m = new PBRMaterial(\r\n                                new Color(mat.pbrMetallicRoughness?.baseColorFactor).rgb,\r\n                                mat.pbrMetallicRoughness?.metallicFactor ?? 1,\r\n                                mat.pbrMetallicRoughness?.roughnessFactor ?? 1\r\n                            );\r\n                            m.albedo_image = images[mat.pbrMetallicRoughness!.baseColorTexture!.index!];\r\n                            m.normal_image = images[mat.normalTexture!.index];\r\n                            m.occlusion_image = images[mat.occlusionTexture!.index];\r\n                            m.metal_roughness_image = images[mat.pbrMetallicRoughness!.metallicRoughnessTexture!.index];\r\n                            m.emissive_image = images[mat.emissiveTexture!.index];\r\n                            materials.push(m);\r\n                        }\r\n\r\n                    resolve({ buffered_geometries: buffered_geometries, materials: materials } as glTFData);\r\n\r\n                    function glTFLoaderError(prop: any): never {\r\n                        throw new Error(`${file_name} missing ${prop in o}`);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    //TODO: CLEANUP\r\n    private static buildAttributeAndTypedBuffer(\r\n        o: glTF,\r\n        type: AttributeType,\r\n        accessor: Accessor,\r\n        x: BufferedGeometry,\r\n        array_buffers: ArrayBuffer[],\r\n        a: Attribute,\r\n        my_buffer_index: number\r\n    ): void {\r\n        const buffer_view = o.bufferViews![accessor.bufferView!];\r\n        const componentType = accessor.componentType;\r\n        const buffer_index = buffer_view.buffer;\r\n        const offset = buffer_view.byteOffset;\r\n        const length = buffer_view.byteLength / 4;\r\n        x.buffers.push({\r\n            buffer: ArrayBufferToTypedArray(componentType, array_buffers[buffer_index], offset, length),\r\n            target: 34962,\r\n        });\r\n\r\n        a.type = type;\r\n        a.enabled = true;\r\n        a.buffer_index = my_buffer_index;\r\n        a.component_type = accessor.componentType;\r\n    }\r\n\r\n    // private static fromString(s: string, float32Array = Float32Array): MeshInstance {\r\n    //\r\n    //\r\n    //\r\n    // }\r\n}\r\n\r\nfunction buildBufferedGeometry(o: glTF): BufferedGeometry[] {\r\n    const attributes = buildAttributes(o.meshes![0].primitives[0]);\r\n    return [] as BufferedGeometry[];\r\n}\r\n\r\nfunction buildAttributes(o: MeshPrimitive): Attribute[] {\r\n    return [] as Attribute[];\r\n}\r\n\r\nfunction ArrayBufferToTypedArray(\r\n    component_type: ComponentType,\r\n    view: ArrayBuffer,\r\n    offset: number = 0,\r\n    length?: number\r\n): TypedArray {\r\n    switch (component_type) {\r\n        case 5120:\r\n        case 5121:\r\n            return new Uint8Array(view, offset, length);\r\n        case 5122:\r\n            return new Int16Array(view, offset, length);\r\n        case 5123:\r\n            return new Uint16Array(view, offset, length);\r\n        case 5124:\r\n            return new Int32Array(view, offset, length);\r\n        case 5125:\r\n            return new Uint32Array(view, offset, length);\r\n        case 5126:\r\n            return new Float32Array(view, offset, length);\r\n        default:\r\n            throw new Error(`Bad ComponentType ${component_type}`);\r\n    }\r\n}\r\n"],"names":["FileLoader","ImageLoader","BufferedGeometry","PBRMaterial"],"mappings":"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"}