{"version":3,"file":"PBRMaterial.js","sources":["../../../../iwo/src/materials/PBRMaterial.ts"],"sourcesContent":["import { Material } from \"./Material\";\r\nimport { Shader } from \"graphics/shader/Shader\";\r\nimport { Renderer } from \"graphics/Renderer\";\r\nimport { Texture2D } from \"graphics/Texture2D\";\r\nimport { vec3 } from \"gl-matrix\";\r\nimport { TextureCubeMap } from \"graphics/TextureCubeMap\";\r\n\r\nexport class PBRMaterial extends Material {\r\n    public albedo: vec3;\r\n    public metallic: number;\r\n    public roughness: number;\r\n    public ao: number = 1;\r\n    public emissive_factor: vec3 = [1, 1, 1];\r\n    public albedo_texture: Texture2D | undefined;\r\n    public albedo_image: HTMLImageElement | undefined;\r\n    public normal_texture: Texture2D | undefined;\r\n    public normal_image: HTMLImageElement | undefined;\r\n    public occlusion_texture: Texture2D | undefined;\r\n    public occlusion_image: HTMLImageElement | undefined;\r\n    public metal_roughness_texture: Texture2D | undefined;\r\n    public metal_roughness_image: HTMLImageElement | undefined;\r\n    public emissive_texture: Texture2D | undefined;\r\n    public emissive_image: HTMLImageElement | undefined;\r\n    public irradiance_texture: TextureCubeMap | undefined;\r\n    public specular_env: TextureCubeMap | undefined;\r\n\r\n    public constructor(\r\n        color: vec3,\r\n        metallic: number,\r\n        roughness: number,\r\n        ambient_occlusion?: number,\r\n        emissive_factor?: vec3\r\n    ) {\r\n        super();\r\n\r\n        this.albedo = vec3.clone(color);\r\n        this.metallic = metallic;\r\n        this.roughness = roughness;\r\n        this.ao = ambient_occlusion || this.ao;\r\n        this.emissive_factor = emissive_factor || this.emissive_factor;\r\n    }\r\n\r\n    public activate(gl: WebGL2RenderingContext): void {\r\n        const shader = this.shader;\r\n        const active_textures = [false, false, false, false, false, false];\r\n        if (this.albedo_texture === undefined && this.albedo_image && this.albedo_image.complete) {\r\n            this.albedo_texture = new Texture2D(gl, this.albedo_image, {\r\n                flip: false,\r\n                internal_format: gl.SRGB8_ALPHA8,\r\n                format: gl.RGBA,\r\n            });\r\n        }\r\n        if (this.albedo_texture) {\r\n            this.albedo_texture.bind(gl, 0);\r\n            active_textures[0] = true;\r\n        }\r\n\r\n        if (this.irradiance_texture) {\r\n            this.irradiance_texture.bind(gl, 1);\r\n            active_textures[1] = true;\r\n        }\r\n\r\n        if (this.specular_env) {\r\n            this.specular_env.bind(gl, 2);\r\n            active_textures[2] = true;\r\n        }\r\n\r\n        if (this.normal_texture === undefined && this.normal_image?.complete) {\r\n            this.normal_texture = new Texture2D(gl, this.normal_image, {\r\n                flip: false,\r\n            });\r\n        }\r\n        if (this.normal_texture) {\r\n            this.normal_texture.bind(gl, 3);\r\n            active_textures[3] = true;\r\n        }\r\n\r\n        if (this.occlusion_texture === undefined && this.occlusion_image?.complete) {\r\n            this.occlusion_texture = new Texture2D(gl, this.occlusion_image, {\r\n                flip: false,\r\n            });\r\n        }\r\n        if (this.occlusion_texture) {\r\n            this.occlusion_texture.bind(gl, 4);\r\n            active_textures[4] = true;\r\n        }\r\n\r\n        if (this.metal_roughness_texture === undefined && this.metal_roughness_image?.complete) {\r\n            this.metal_roughness_texture = new Texture2D(gl, this.metal_roughness_image, {\r\n                flip: false,\r\n            });\r\n        }\r\n        if (this.metal_roughness_texture) {\r\n            this.metal_roughness_texture.bind(gl, 5);\r\n            active_textures[5] = true;\r\n        }\r\n\r\n        if (this.emissive_texture === undefined && this.emissive_image?.complete) {\r\n            this.emissive_texture = new Texture2D(gl, this.emissive_image, {\r\n                flip: false,\r\n                internal_format: gl.SRGB8_ALPHA8,\r\n                format: gl.RGBA,\r\n            });\r\n        }\r\n        if (this.emissive_texture) {\r\n            this.emissive_texture.bind(gl, 6);\r\n            active_textures[6] = true;\r\n        }\r\n\r\n        if (Renderer.BRDF_LUT_TEXTURE) {\r\n            gl.activeTexture(gl.TEXTURE7);\r\n            gl.bindTexture(gl.TEXTURE_2D, Renderer.BRDF_LUT_TEXTURE);\r\n        }\r\n\r\n        shader.setUniform(\"u_material.active_textures[0]\", active_textures);\r\n        shader.setUniform(\"u_material.albedo\", this.albedo);\r\n        shader.setUniform(\"u_material.roughness\", this.roughness);\r\n        shader.setUniform(\"u_material.metallic\", this.metallic);\r\n        shader.setUniform(\"u_material.ao\", this.ao);\r\n        shader.setUniform(\"u_material.emissive_factor\", this.emissive_factor);\r\n    }\r\n\r\n    public get shader(): Shader {\r\n        return Renderer.GetShader(\"PBRShader\")!;\r\n    }\r\n\r\n    public static get Shader(): Shader {\r\n        return Renderer.GetShader(\"PBRShader\")!;\r\n    }\r\n\r\n    private static generateBRDFLUT(gl: WebGL2RenderingContext): Texture2D {\r\n        const tex = {} as Texture2D;\r\n        tex.texture_id = gl.createTexture()!;\r\n\r\n        return tex;\r\n    }\r\n}\r\n"],"names":["Material","Texture2D","Renderer"],"mappings":"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"}