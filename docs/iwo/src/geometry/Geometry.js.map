{"version":3,"file":"Geometry.js","sources":["../../../../iwo/src/geometry/Geometry.ts"],"sourcesContent":["import { BufferedGeometry } from \"geometry/BufferedGeometry\";\r\nimport { TypedArray } from \"types/types\";\r\n\r\n//TODO: Change to match glTF https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#meshes\r\nexport enum AttributeType {\r\n    Vertex = 0,\r\n    Tex_Coord = 1,\r\n    Normal = 2,\r\n    Tangent = 3,\r\n    Bitangent = 4,\r\n}\r\n\r\nexport const AttributeTypeValues: ReadonlyArray<number> = Object.keys(AttributeType)\r\n    .filter(value => !isNaN(Number(value)))\r\n    .map(value => Number(value));\r\n\r\n\r\n\r\n/*\r\n    A Group is a subset of a Mesh that\r\n    wants to be drawn separately because it uses a different material\r\n */\r\nexport interface Group {\r\n    offset: number;\r\n    count: number;\r\n    material_index: number;\r\n}\r\n\r\nexport class Geometry {\r\n    public indices: Uint16Array | Uint32Array | undefined;\r\n    public attributes: Map<AttributeType, TypedArray>;\r\n    public groups?: Group[];\r\n    public interleaved_attributes: Float32Array | undefined;\r\n\r\n    public constructor() {\r\n        this.attributes = new Map<AttributeType, TypedArray>();\r\n        this.groups = [];\r\n    }\r\n\r\n    public getBufferedGeometry?(): BufferedGeometry;\r\n\r\n    //TODO\r\n    //Bounding Sphere\r\n    //Bounding Box (AABB)\r\n}\r\n\r\n"],"names":[],"mappings":"AAGA;IACY;AAAZ,WAAY,aAAa;IACrB,qDAAU,CAAA;IACV,2DAAa,CAAA;IACb,qDAAU,CAAA;IACV,uDAAW,CAAA;IACX,2DAAa,CAAA;AACjB,CAAC,EANW,aAAa,KAAb,aAAa,QAMxB;MAEY,mBAAmB,GAA0B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;KAC/E,MAAM,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KACtC,GAAG,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;MAcpB,QAAQ;IAMjB;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,EAA6B,CAAC;QACvD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;KACpB;;;;;"}